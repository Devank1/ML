# -*- coding: utf-8 -*-
"""linear_regression_dev.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WkTdzETtYlBgwt6hQGz0ZkwUJmCmFnv1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.axes as ax
df=pd.read_csv("FD.csv")
df.head()

X=df["x"]
Y=df["y"]

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.33)

from google.colab import drive
drive.mount('/content/drive')

plt.scatter(X_train,Y_train)
plt.scatter(X_test,Y_test)
plt.show()

mean_x = sum(X)/len(X)
mean_y = sum(Y)/len(Y)
print(mean_x)
print(mean_y)

sm=0
den=0
for i in range(len(X)):
    sm += (X[i]-mean_x)*(Y[i]-mean_y)
    den += (X[i]-mean_x)**2
m=sm/den
print(m)

c=mean_y- (m*mean_x)
print(c)

line = [m*i + c for i in X]
plt.plot(X,line,label= "line fit",color="r")
plt.scatter(X,Y,label = "Points")
# plt.xlabel("x")
# plt.ylabel("y")
plt.legend()
plt.grid(True)
plt.show()

sse = 0
for i in Y:
    sse+=(i-mean_y)**2
sse

line

sse=0
for yi, yc in zip(Y,line):
    sse+=(yi-yc)**2
sse

line=np.array(line)
ycap_mean = line.mean()
ssr=0
for i in line:
    ssr+=(i-ycap_mean)**2
sst=0
for i in Y:
    sst+=(i-mean_y)**2
r=ssr/sst
r

