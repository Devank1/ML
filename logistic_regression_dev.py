# -*- coding: utf-8 -*-
"""Logistic regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IdTEzK4Ww6uDPQz-qVk-PWTDfDplTJhB
"""

import pandas as pd
data = pd.read_csv("Student-University(For Logistic Regression Program) (2).csv",header=None)

data

data.head()

import numpy as np

from sklearn.model_selection import train_test_split

from sklearn import preprocessing

from sklearn.preprocessing import StandardScaler

from sklearn.model_selection import KFold

kf = KFold(n_splits=5)

x = data.iloc[:,[0,1]].values
y = data.iloc[:,2].values

xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size = 0.20,random_state=0)
x1 = xtrain[:,0]
x2 = xtrain[:,1]
b0=0.0
b1=0.0
b2=0.0
epoch = 100
alpha = 0.001
while(epoch>0):
    for i in range(len(xtrain)):
        prediction = 1/(1+np.exp(-(b0+b1*x1[i]+b2*x2[i])))
        b0 = b0+alpha*(ytrain[i]-prediction)*prediction*(1-prediction)*1.0
        b1 = b1+alpha*(ytrain[i]-prediction)*prediction*(1-prediction)*x1[i]
        b2 = b2+alpha*(ytrain[i]-prediction)*prediction*(1-prediction)*x2[i]
    epoch = epoch-1
    print(b0)
    print(b1)
    print(b2)

final_pred = []
x3 = xtest[:,0]
x4 = xtest[:,1]
print(ytest)

for i in range(len(xtrain)):
    if i < len(x3) and i < len(x4):
        pred = np.round(1 / (1 + np.exp(-(b0 + b1 * x3[i] + b2 * x4[i]))))
        print(pred)